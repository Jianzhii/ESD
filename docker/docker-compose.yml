version: "3.8"

volumes:
  rabbitmq_data:
  pgdata: 
  kongadata:

networks:
  kong-net:
    driver: bridge

services:

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:9.6
    restart: always
    networks:
      - kong-net
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data


  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong:2.0.4
    command: "kong migrations bootstrap"
    restart: on-failure
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
    depends_on:
      - kong-database 

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:2.0.4
    restart: always
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      - kong-migration
    ports:
      - "8000:8000"
  
  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga
    restart: always
    networks:
        - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: password
      DB_DATABASE: konga_db
    depends_on:
      - kong
    ports:
      - "1337:1337"
    volumes:
      - kongadata:/app/kongadata


  ####################################
  # RabbitMQ: The messaging broker
  ####################################
  rabbitmq:
    image: rabbitmq:3-management
    hostname: esd-rabbit
    restart: always
    networks:
      - kong-net
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq


  ###################################
  # Profile: The Profile microservice
  ###################################
  profile:
    build:
      context: ./
      dockerfile: profile.Dockerfile
    image: jzshum/profile:esd
    restart: always
    networks:
      - kong-net
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/profile
      PYTHONUNBUFFERED: 1
    ports:
      - "5003:5003"

  ###################################
  # Funds: The Funds microservice
  ###################################
  funds:
    build:
      context: ./
      dockerfile: funds.Dockerfile
    image: jzshum/funds:esd
    restart: always
    networks:
      - kong-net
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/funds
      PYTHONUNBUFFERED: 1
    ports:
      - "5002:5002"
      
  ###################################
  # Portfolio: The Portfolio microservice
  ###################################
  portfolio:
    build:
      context: ./
      dockerfile: portfolio.Dockerfile
    image: jzshum/portfolio:esd
    restart: always
    networks:
      - kong-net
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/portfolio
      PYTHONUNBUFFERED: 1
    ports:
      - "5001:5001"

  #################################################
  # Authenticate User: The Authenticate User microservice
  #################################################
  auth_user:
    build:
      context: ./
      dockerfile: auth_user.Dockerfile
    image: jzshum/auth_user:esd
    restart: always
    networks:
      - kong-net
    depends_on:
      - funds
      - profile
      - error
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      profile_URL: http://profile:5003/profile
      funds_URL: http://funds:5002/funds
      PYTHONUNBUFFERED: 1
    ports:
      - "5200:5200"

  #################################################
  # Yahoo Friend: The Yahoo Friend microservice
  #################################################
  yahoo_friend:
    build:
      context: ./
      dockerfile: yahoo_friend.Dockerfile
    image: jzshum/yahoo_friend:esd
    restart: always
    networks:
      - kong-net
    environment:
      PYTHONUNBUFFERED: 1
    ports:
      - "5900:5900"

  #################################################
  # Activity Log: The Activity Log microservice
  #################################################
  activity_log:
    build:
      context: ./
      dockerfile: activity_log.Dockerfile
    image: jzshum/activity_log:esd
    restart: always
    networks:
      - kong-net
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1

  ###################################
  # Error: The Error microservice
  ###################################
  error:
    build:
      context: ./
      dockerfile: error.Dockerfile
    image: jzshum/error:esd
    restart: always
    networks:
      - kong-net
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1

  ###############################################
  # Order Management: The Order Management microservice
  ###############################################
  order_management:
    build:
      context: ./
      dockerfile: order_management.Dockerfile
    image: jzshum/order_management:esd
    restart: always
    networks:
      - kong-net
    depends_on:
      - funds
      - portfolio
      - activity_log
      - error
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      portfolio_URL: http://portfolio:5001/portfolio
      funds_URL: http://funds:5002/funds
      PYTHONUNBUFFERED: 1
    ports:
      - "5100:5100"

  ###############################################
  # User Profile: The User Profile microservice
  ###############################################
  user_profile:
    build:
      context: ./
      dockerfile: userprofile.Dockerfile
    image: jzshum/userprofile:esd
    restart: always
    networks:
      - kong-net
    depends_on:
      - funds
      - portfolio
      - profile
      - error
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      portfolio_URL: http://portfolio:5001/portfolio
      funds_URL: http://funds:5002/funds
      profile_URL: http://profile:5003/profile
      yahoo_URL: http://yahoo_friend:5900/stock 
      PYTHONUNBUFFERED: 1
    ports:
      - "5008:5008"